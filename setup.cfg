# ======================================================================================
# Copyright and other protections apply. Please see the accompanying LICENSE file for
# rights and restrictions governing use of this software. All rights not expressly
# waived or licensed are reserved. If that file is missing or appears to be modified
# from its original, then please contact the author before viewing or using this
# software in any capacity.
# ======================================================================================

[metadata]  # --------------------------------------------------------------------------

name = numerary
version = attr:numerary.version.__vers_str__
url = https://posita.github.io/numerary/latest/
author = Matt Bogosian
author_email = matt@bogosian.net
project_urls =
    Source Repository = https://github.com/posita/numerary/
# From <https://pypi.python.org/pypi?%3Aaction=list_classifiers>
classifiers =
  Topic :: Education
  Topic :: Scientific/Engineering :: Mathematics
  Topic :: Software Development :: Libraries :: Python Modules
  Typing :: Typed
  Development Status :: 2 - Pre-Alpha
  Intended Audience :: Developers
  Intended Audience :: Education
  Intended Audience :: Science/Research
  License :: OSI Approved :: MIT License
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: Implementation :: CPython
  Programming Language :: Python :: Implementation :: PyPy
license = MIT License
license_files = LICENSE
description = Python hacks for type checking numbers
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8

[options]  # ---------------------------------------------------------------------------

packages = numerary
include_package_data = True
python_requires = >=3.7
install_requires =
  typing-extensions>=3.10;python_version<'3.9'
setup_requires =
  typing-extensions>=3.10;python_version<'3.9'

[options.extras_require]  # ------------------------------------------------------------

dev =
  beartype>=0.8,!=0.9.0  # for testing
  numpy  # for testing
  pre-commit
  sympy>=1.9  # for testing
  tox

[tox:tox]  # ---------------------------------------------------------------------------

envlist = check, py39-lint{,-beartype}, py39{,-beartype}, py{37,38,310,py3}-beartype
skipsdist = true
skip_missing_interpreters = true

[gh-actions]  # ------------------------------------------------------------------------

python =
  3.7: py37-lint{,-beartype} py37-beartype
  3.8: py38-lint{,-beartype} py38-beartype
  3.9: check, py39-lint{,-beartype}, py39{,-beartype}
  3.10: py310-lint{,-beartype} py310-beartype
  pypy-3.7: pypy3-beartype

[testenv]  # ---------------------------------------------------------------------------

commands =
  pytest --cov=numerary {posargs}
deps =
  --editable .
  beartype: beartype>=0.8,!=0.9.0
  !pypy3-!pypy37: numpy
  pytest-cov
  # Because ${HOME} is not passed, ~/.gitconfig is not read. To overcome this, port any
  # desired user-specific exclusion configuration to .git/config. E.G.:
  #
  #   [core]
  #   excludesfile = /home/username/.gitignore
  #
  # Alternatively, add entries directly to .git/info/exclude. See also mkdocs-exclude
  # below.
  pytest-gitignore
  sympy>=1.9
passenv =
  PYTHONBREAKPOINT
setenv =
  PYTHONWARNINGS = {env:PYTHONWARNINGS:ignore}

[testenv:check]  # ---------------------------------------------------------------------

commands =
  rm -frv site
  mkdocs build --strict
  python -c 'from setuptools import setup ; setup()' bdist_wheel
  twine check dist/*
deps =
  --editable .
  mike
  # See <https://github.com/mkdocs/mkdocs/issues/2448>
  # See <https://github.com/mkdocstrings/mkdocstrings/issues/295>
  mkdocs!=1.2
  # See pytest-gitignore note above
  mkdocs-exclude
  mkdocs-material
  mkdocstrings
  sympy
  twine
whitelist_externals =
  git
  make
  rm

[testenv:py{37,38,39,310}-lint{,-beartype}]  # -----------------------------------------

commands =
  pre-commit run --all-files --show-diff-on-failure
  beartype: mypy --config-file={toxinidir}/pyproject.toml --warn-unused-ignores .
  !beartype: mypy --config-file={toxinidir}/pyproject.toml .
  {toxinidir}/helpers/mypy-doctests.py -a=--config-file={toxinidir}/pyproject.toml .
deps =
  --editable .
  beartype: beartype>=0.8,!=0.9.0
  mypy
  pre-commit
  sympy

[flake8]  # ----------------------------------------------------------------------------

# See:
# * <https://pycodestyle.readthedocs.io/en/latest/intro.html#error-codes>
# * <https://flake8.readthedocs.io/en/latest/user/error-codes.html>
ignore =
  E501,  # line too long (... > ... characters)
  W503,  # line break occurred before a binary operator
